{"version":3,"sources":["mcq/title.js","mcq/headings.js","mcq/index.js","mcq/mcq.js","App.js","reportWebVitals.js","index.js"],"names":["Title","content","useState","show","setShow","className","onClick","map","item","index","title","to","replace","Headings","data","setData","loading","setLoading","useEffect","setTimeout","contents","style","textAlign","curElem","id","Index","props","fileName","searchTerm","trim","a","url","fetch","res","json","resJson","fetchApi","newData","filter","Question","toLowerCase","includes","code","ques","ans","Options","Answer","split","substring","indexOf","dangerouslySetInnerHTML","__html","option","withRouter","fname","match","params","App","setSearchTerm","focus","setFocus","background","setBackground","darkMode","setDarkMode","color","Navbar","history","useHistory","handleChange","e","preventDefault","target","value","Nav","push","backgroundColor","autoFocus","type","placeholder","onChange","theme","createTheme","palette","ThemeProvider","Paper","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.184c1b81.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Title = ({ Title, content }) => {\r\n  const [show, setShow] = useState(false);\r\n  return (\r\n    <>\r\n      <div className=\"heading\" onClick={() => setShow(!show)}>\r\n        <p>\r\n          {show ? (\r\n            <i className=\"fas fa-chevron-up\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-chevron-down\"></i>\r\n          )}\r\n        </p>\r\n        <p>{Title}</p>\r\n      </div>\r\n      {show && (\r\n        <div className=\"topics\">\r\n          {content.map((item, index) => {\r\n            let { title } = item;\r\n            return (\r\n              <div className=\"option\" key={index}>\r\n                <i className=\"fas fa-angle-double-right\"></i>\r\n                {\"     \"}\r\n                <Link to={\"allmcq/mcq/\" + title}>\r\n                  {title.replace(\"1000\", \"\")}\r\n                </Link>\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          {/* <Router></Router> */}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./headings.css\";\r\nimport contents from \"./saved/contents.json\";\r\nimport Title from \"./title\";\r\nconst Headings = () => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      setData(contents);\r\n    }, 1000);\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <h1 style={{ textAlign: \"center\" }}>Loading...</h1>;\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h1 style={{ textAlign: \"center\" }}>Select the topic</h1>\r\n        {data.map((curElem) => {\r\n          const { id } = curElem;\r\n          return <Title key={id} {...curElem} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Headings;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Index = (props) => {\r\n  let title = props.fileName;\r\n  let searchTerm = props.searchTerm.trim();\r\n  const [data, setData] = useState(null);\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      const url = `https://mcq1-api.herokuapp.com/api/${title}`;\r\n      const res = await fetch(url);\r\n      const resJson = await res.json();\r\n      setData(resJson);\r\n    };\r\n    fetchApi();\r\n  }, [title]);\r\n  //   console.log(data);\r\n  if (!data) {\r\n    return <div style={{ textAlign: \"center\" }}>Loading...</div>;\r\n  }\r\n  if (searchTerm && data) {\r\n    const newData = data.filter((item) => {\r\n      let { Question } = item;\r\n      if (Question) {\r\n        return Question.toLowerCase().includes(searchTerm.toLowerCase());\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    return (\r\n      <>\r\n        {newData.map((item, index) => {\r\n          let { Question, Options, Answer } = item;\r\n          let code;\r\n          let ques, ans;\r\n          if (Answer) {\r\n            ans = Answer.split(\"\\n\")[0];\r\n          }\r\n          //\r\n          if (Question) {\r\n            code = Question.substring(Question.indexOf(\"<\"));\r\n            ques = Question.replace(code, \"\");\r\n          }\r\n          return (\r\n            <div key={index} className=\"mcq\">\r\n              <div className=\"question\">\r\n                <span>{ques}</span>\r\n                <div dangerouslySetInnerHTML={{ __html: code }}></div>\r\n                <div className=\"border\"></div>\r\n              </div>\r\n              <div className=\"option-ans\">\r\n                {Options.map((option, index) => {\r\n                  return <p key={index}>{option}</p>;\r\n                })}\r\n                <div className=\"answer\">{ans}</div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      {/* <p>{!data ? \"Loading...\" : \"yes\"}</p>\r\n      <p>{title}</p> */}\r\n      {data &&\r\n        data.map((item, index) => {\r\n          let { Question, Options, Answer } = item;\r\n          let code;\r\n          let ques, ans;\r\n          if (Answer) {\r\n            ans = Answer.split(\"\\n\")[0];\r\n          }\r\n          //\r\n          if (Question) {\r\n            code = Question.substring(Question.indexOf(\"<\"));\r\n            ques = Question.replace(code, \"\");\r\n          }\r\n          return (\r\n            <div key={index} className=\"mcq\">\r\n              <div className=\"question\">\r\n                <span>{ques}</span>\r\n                <div dangerouslySetInnerHTML={{ __html: code }}></div>\r\n                <div className=\"border\"></div>\r\n              </div>\r\n              <div className=\"option-ans\">\r\n                {Options.map((option, index) => {\r\n                  return <p key={index}>{option}</p>;\r\n                })}\r\n                <div className=\"answer\">{ans}</div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./mcq.css\";\r\nimport Index from \"./index\";\r\n\r\nconst Mcq = (props) => {\r\n  const fname = props.match.params.fileName;\r\n\r\n  return (\r\n    <>\r\n      <Index fileName={fname} searchTerm={props.searchTerm} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Mcq);\r\n","import React, { useState } from \"react\";\nimport Headings from \"./mcq/headings\";\nimport MCQ from \"./mcq/mcq\";\nimport \"./navbar.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useHistory,\n} from \"react-router-dom\";\nimport { Paper } from \"@material-ui/core\";\nimport { ThemeProvider, createTheme } from \"@material-ui/core/styles\";\n\nconst App = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [focus, setFocus] = useState(false);\n  const [background, setBackground] = useState(\"#ccc\");\n  const [darkMode, setDarkMode] = useState(false);\n  const color = [\"#ccc\", \"white\"];\n  const Navbar = () => {\n    const history = useHistory();\n    const handleChange = (e) => {\n      e.preventDefault();\n      setFocus(true);\n      setSearchTerm(e.target.value);\n    };\n    const Nav = () => {\n      return (\n        <>\n          <nav\n            className={`navbar ${\n              darkMode ? \"navbar-dark bg-dark\" : \"navbar-light bg-light\"\n            } sticky-top`}\n          >\n            <div className=\"container-fluid\">\n              <span\n                onClick={() => history.push(\"/allmcq\")}\n                className=\"navbar-brand\"\n              >\n                MCQ\n              </span>\n              <div\n                className=\"d-flex\"\n                style={{ backgroundColor: background }}\n                onClick={() => {\n                  setDarkMode(!darkMode);\n                  if (background === color[0]) {\n                    setBackground(color[1]);\n                  }\n                  if (background === color[1]) {\n                    setBackground(color[0]);\n                  }\n                }}\n              >\n                {background === color[0] ? \"🌙\" : \"🌞\"}\n              </div>\n              <input\n                autoFocus={focus}\n                className=\"form-control me-2\"\n                type=\"search\"\n                value={searchTerm}\n                placeholder=\"Search\"\n                aria-label=\"Search\"\n                onChange={handleChange}\n              ></input>\n            </div>\n          </nav>\n        </>\n      );\n    };\n    return (\n      <div>\n        <Nav key=\"nav\" />\n      </div>\n    );\n  };\n\n  const theme = createTheme({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\",\n    },\n  });\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper>\n        <div data-theme={darkMode ? \"dark\" : \"light\"}>\n          <Router>\n            <Navbar />\n            <Switch>\n              <Route exact path=\"/allmcq\" component={Headings} />\n              <Route exact path=\"/allmcq/mcq/:fileName\">\n                <MCQ searchTerm={searchTerm} />\n              </Route>\n              <Route path=\"/\" component={Headings} />\n            </Switch>\n          </Router>\n        </div>\n      </Paper>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}